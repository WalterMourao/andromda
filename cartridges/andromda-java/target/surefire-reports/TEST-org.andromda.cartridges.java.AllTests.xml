<?xml version="1.0" encoding="UTF-8" ?>
<testsuite failures="0" time="4.387" errors="0" skipped="0" tests="50" name="org.andromda.cartridges.java.AllTests">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="24.79-b02"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="BR"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/walter/git/andromda/cartridges/andromda-java"/>
    <property name="java.runtime.version" value="1.7.0_79-b14"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/home/walter/apache-maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/lib32:/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="51.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="3.19.0-16-generic"/>
    <property name="user.home" value="/home/walter"/>
    <property name="user.timezone" value="America/Sao_Paulo"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="ISO-8859-1"/>
    <property name="java.specification.version" value="1.7"/>
    <property name="user.name" value="walter"/>
    <property name="java.class.path" value="/home/walter/apache-maven/boot/plexus-classworlds-2.4.jar:/usr/share/java/jayatanaag.jar"/>
    <property name="java.vm.specification.version" value="1.7"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-7-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher package"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="pt"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.7.0_79"/>
    <property name="encoding" value="ISO-8859-1"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/home/walter/apache-maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase time="3.439" classname="org.andromda.cartridges.java.SimpleJavaModuleTest" name="testConfigure"/>
  <testcase time="0.389" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateMethods"/>
  <testcase time="0.018" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateMethodJavadoc"/>
  <testcase time="0.006" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateClassJavadoc"/>
  <testcase time="0.046" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateGetterSetterJavadoc"/>
  <testcase time="0.101" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateMethodTemplateParams"/>
  <testcase time="0.004" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateAssociationEndUpperCardinalityMultiplesIsOrdered"/>
  <testcase time="0.004" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateAssociationEndUpperCardinalityMultiplesIsUnique"/>
  <testcase time="0.004" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateAssociationEndUpperCardinalityMultiplesDefault"/>
  <testcase time="0.005" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateAssociationEndUpperCardinalityMultiplesIsUniqueAndIsOrdered"/>
  <testcase time="0.005" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateGetterMethodUpperZero"/>
  <testcase time="0.004" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGeneratePackage"/>
  <testcase time="0.004" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateClass"/>
  <testcase time="0.021" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateClassWithInheritance"/>
  <testcase time="0.004" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateClassWithTemplate"/>
  <testcase time="0.004" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateGetterMethodUpperAsterisk"/>
  <testcase time="0.004" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateGetterMethodTypeBoolean"/>
  <testcase time="0.003" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateGetterMethodTypeLowerCaseBoolean"/>
  <testcase time="0.003" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateMethodParams"/>
  <testcase time="0.038" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateMethodParamsWithOneParameter"/>
  <testcase time="0.008" classname="org.andromda.cartridges.java.InterfaceGeneratorTest" name="testGenerateMethodParamsWithOneParameterWithGenerics"/>
  <testcase time="0.035" classname="org.andromda.cartridges.java.InterfaceGeneratorMethodParamsTest" name="testGenerateMethodParamsWithParameter"/>
  <testcase time="0.002" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGeneratePackage"/>
  <testcase time="0.001" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateEnum"/>
  <testcase time="0.101" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateConstantsIntegerWithNoParamNames"/>
  <testcase time="0.008" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateConstantsStringWithNoParamNames"/>
  <testcase time="0.008" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateConstantsLongWithNoParamNames"/>
  <testcase time="0.009" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateConstantsBooleanWithNoParamNames"/>
  <testcase time="0.006" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateGetterMethod"/>
  <testcase time="0.005" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateGetterMethodWithSourceDirectoryPackageNameWrong"/>
  <testcase time="0.006" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateGetterMethodWithSourceDirectoryPackageNameCorrect"/>
  <testcase time="0.005" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateAttribute"/>
  <testcase time="0.007" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateConstructorWithOneParameter"/>
  <testcase time="0.01" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateConstructorWithTwoParameters"/>
  <testcase time="0.008" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateContructorParameters"/>
  <testcase time="0.004" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testFindSlotByNameFoundIt"/>
  <testcase time="0.004" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testFindSlotByNameNotFound"/>
  <testcase time="0.012" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateConstantsWithConstructorParameterNamesAndWithFoundSlot"/>
  <testcase time="0.015" classname="org.andromda.cartridges.java.EnumGeneratorTest" name="testGenerateConstantsWithConstructorParameterNamesAndWithSlotNotFound"/>
  <testcase time="0" classname="org.andromda.cartridges.java.ExceptionGeneratorTest" name="testGenerateClassCheckedExceptionWithNoInheritance"/>
  <testcase time="0.004" classname="org.andromda.cartridges.java.ExceptionGeneratorTest" name="testGenerateClassCheckedExceptionWithInheritance"/>
  <testcase time="0.003" classname="org.andromda.cartridges.java.ExceptionGeneratorTest" name="testGenerateClassCheckedExceptionWithTemplate"/>
  <testcase time="0.002" classname="org.andromda.cartridges.java.ExceptionGeneratorTest" name="testGenerateClassUncheckedExceptionWithNoInheritance"/>
  <testcase time="0.004" classname="org.andromda.cartridges.java.ExceptionGeneratorTest" name="testGenerateClassUncheckedExceptionWithMultipleInheritance"/>
  <testcase time="0.002" classname="org.andromda.cartridges.java.ExceptionGeneratorTest" name="testGenerateConstructorWithParams"/>
  <testcase time="0.003" classname="org.andromda.cartridges.java.ExceptionGeneratorTest" name="testGenerateClassUncheckedExceptionWithInheritance"/>
  <testcase time="0.003" classname="org.andromda.cartridges.java.ExceptionGeneratorTest" name="testGenerateClassUncheckedExceptionWithTemplate"/>
  <testcase time="0.002" classname="org.andromda.cartridges.java.ExceptionGeneratorTest" name="testGenerateSerialVersionUID"/>
  <testcase time="0.003" classname="org.andromda.cartridges.java.ExceptionGeneratorTest" name="testGenerateConstructors"/>
  <testcase time="0.001" classname="org.andromda.cartridges.java.JavaCodeFormatterTest" name="testFormat"/>
</testsuite>